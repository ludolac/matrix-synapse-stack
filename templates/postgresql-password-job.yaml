{{- if and .Values.postgresql.enabled .Values.postgresql.passwordFixJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "matrix-synapse.fullname" . }}-pg-password-fix
  labels:
    {{- include "matrix-synapse.postgresql.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "matrix-synapse.postgresql.selectorLabels" . | nindent 8 }}
        job: password-fix
    spec:
      restartPolicy: OnFailure
      containers:
        - name: password-fix
          image: postgres:16-alpine
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h {{ include "matrix-synapse.fullname" . }}-postgresql -U {{ .Values.postgresql.username }}; do
                sleep 2
              done

              echo "PostgreSQL is ready. Updating password..."
              PGPASSWORD="${POSTGRES_PASSWORD}" psql -h {{ include "matrix-synapse.fullname" . }}-postgresql \
                -U {{ .Values.postgresql.username }} \
                -d {{ .Values.postgresql.database }} \
                -c "ALTER USER {{ .Values.postgresql.username }} WITH PASSWORD '${POSTGRES_PASSWORD}';" || true

              echo "Password update complete!"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "matrix-synapse.fullname" . }}-postgresql
                  key: postgres-password
{{- end }}
